(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{426:function(a,r,t){"use strict";t.r(r);var n=t(2),s=Object(n.a)({},(function(){var a=this,r=a._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"学习nginx，你一定要知道这些"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#学习nginx，你一定要知道这些"}},[a._v("#")]),a._v(" 学习Nginx，你一定要知道这些")]),a._v(" "),r("p",[r("img",{attrs:{src:"/img/blog/20210115175444.png",alt:"NGINX-logo-rgb-large"}})]),a._v(" "),r("h2",{attrs:{id:"apahce和nginx的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#apahce和nginx的区别"}},[a._v("#")]),a._v(" Apahce和nginx的区别")]),a._v(" "),r("p",[a._v("nginx相对于apache来说是轻量级，同样是web服务，比apache占用内存及资源更少，抗并发方面也是，nginx处理请求是异步非阻塞的，而apache则是阻塞型的，在高并发下nginx能保持高性能，但是nginx有一些不足，他在健康检查方面只能通过端口来检测，不支持url来检测，并且支持的协议比较少，")]),a._v(" "),r("h2",{attrs:{id:"nginx作为负载均衡"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#nginx作为负载均衡"}},[a._v("#")]),a._v(" nginx作为负载均衡")]),a._v(" "),r("p",[a._v("nginx的负载均衡模块有：upstream模块和proxy模块")]),a._v(" "),r("p",[a._v("nginx负载均衡的策略：轮询，权重，iphash ,还有urlhash")]),a._v(" "),r("h2",{attrs:{id:"nginx服务器上master和worker的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#nginx服务器上master和worker的区别"}},[a._v("#")]),a._v(" nginx服务器上master和worker的区别")]),a._v(" "),r("p",[a._v("Worker进程是负责处理请求的进程")]),a._v(" "),r("p",[a._v("master进程负责管理worker进程的同时也负责读取配置文件和判断配置文件语法")]),a._v(" "),r("p",[a._v("在nginx中，master进程只能有一个,而worker进程可以有多个")]),a._v(" "),r("h2",{attrs:{id:"啥是三握四挥"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#啥是三握四挥"}},[a._v("#")]),a._v(" 啥是三握四挥")]),a._v(" "),r("h3",{attrs:{id:"以打电话举例"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#以打电话举例"}},[a._v("#")]),a._v(" 以打电话举例")]),a._v(" "),r("p",[a._v("三次握手：")]),a._v(" "),r("p",[a._v("第一次握手：小明说：“喂喂喂，能听到我说话吗？”")]),a._v(" "),r("p",[a._v("第二次握手：小萌说：“我可以听到你说话，你能听到我说话吗？”（我回了你一句，说明了我可以听到你说话（说明了我具有接受消息的能力））")]),a._v(" "),r("p",[a._v("第三次握手：小明说：“我听到你说话了”（双方都可以听到对方了声音，表示没有问题，样就可以进行通话了(建立了 TCP 连接)）")]),a._v(" "),r("p",[a._v("四次挥手：")]),a._v(" "),r("p",[a._v("第一次挥手：小明：“我说完了，我要睡了”（主动关闭方发送一个信息，告诉告诉被动关闭方：我已经不会再给你发数据了）")]),a._v(" "),r("p",[a._v("第二次挥手：小萌：“好的，知道了”（被动关闭方收到信息，发送一个类似收到的信息给对方）")]),a._v(" "),r("p",[a._v("第三次挥手：小萌：“恩，我也说完了”（被动关闭方发送一个信息，告诉主动关闭方，我的数据也发送完了，不会再给你发数据了）")]),a._v(" "),r("p",[a._v("第四次挥手：小明：“恩”（主动关闭方收到信息后，发送一个类似收到的信息，完成四次挥手）")]),a._v(" "),r("h2",{attrs:{id:"为什么是三次握手-不是两次或者四次？"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#为什么是三次握手-不是两次或者四次？"}},[a._v("#")]),a._v(" 为什么是三次握手?不是两次或者四次？")]),a._v(" "),r("ul",[r("li",[r("p",[a._v("假如是两次握手，会发生什么情况呢? 服务端在发出应答消息后，它根本就不能确认客户端是否接受到消息了，那么这样意味着只有客户端可以向服务端发送数据。")])]),a._v(" "),r("li",[r("p",[a._v("假如是四次握手呢？明明已经保证了一个稳定的传输流了，为什么还要浪费性能再去发一次消息，浪费了性能。")])])]),a._v(" "),r("h2",{attrs:{id:"原文地址"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#原文地址"}},[a._v("#")]),a._v(" 原文地址")]),a._v(" "),r("p",[r("a",{attrs:{href:"https://www.xswsym.online/pages/791bcd/",target:"_blank",rel:"noopener noreferrer"}},[a._v("nginx必知必会"),r("OutboundLink")],1)])])}),[],!1,null,null,null);r.default=s.exports}}]);